//@version=4
// Copyright (c) 2019-present, Alex Orekhov (everget)
// Chandelier Exit script may be freely distributed under the terms of the GPL-3.0 license.

//set dates according to your requirement
start = timestamp(2023,1,1,0,0)
end = timestamp(2023,4,1,0,0)

strategy(title = "ZLSMA - Zero Lag LSMA & Chandelier Exit", shorttitle="ZLSMA&CE", overlay=true)
//Built in code of Chandelier Exit Strategy


//@version=4
// Copyright (c) 2019-present, Alex Orekhov (everget)
// Chandelier Exit script may be freely distributed under the terms of the GPL-3.0 license.

length = input(title="ATR Period", type=input.integer, defval=1)
mult = input(title="ATR Multiplier", type=input.float, step=0.1, defval=2.0)
showLabels = input(title="Show Buy/Sell Labels ?", type=input.bool, defval=true)
useClose = input(title="Use Close Price for Extremums ?", type=input.bool, defval=true)
highlightState = input(title="Highlight State ?", type=input.bool, defval=true)

atr = mult * atr(length)

longStop = (useClose ? highest(close, length) : highest(length)) - atr
longStopPrev = nz(longStop[1], longStop) 
longStop := close[1] > longStopPrev ? max(longStop, longStopPrev) : longStop

shortStop = (useClose ? lowest(close, length) : lowest(length)) + atr
shortStopPrev = nz(shortStop[1], shortStop)
shortStop := close[1] < shortStopPrev ? min(shortStop, shortStopPrev) : shortStop

var int dir = 1
dir := close > shortStopPrev ? 1 : close < longStopPrev ? -1 : dir

var color longColor = color.green
var color shortColor = color.red

longStopPlot = plot(dir == 1 ? longStop : na, title="Long Stop", style=plot.style_linebr, linewidth=2, color=longColor)
buySignal = dir == 1 and dir[1] == -1
plotshape(buySignal ? longStop : na, title="Long Stop Start", location=location.absolute, style=shape.circle, size=size.tiny, color=longColor, transp=0)
plotshape(buySignal and showLabels ? longStop : na, title="Buy Label", text="Buy", location=location.absolute, style=shape.labelup, size=size.tiny, color=longColor, textcolor=color.white, transp=0)

shortStopPlot = plot(dir == 1 ? na : shortStop, title="Short Stop", style=plot.style_linebr, linewidth=2, color=shortColor)
sellSignal = dir == -1 and dir[1] == 1
plotshape(sellSignal ? shortStop : na, title="Short Stop Start", location=location.absolute, style=shape.circle, size=size.tiny, color=shortColor, transp=0)
plotshape(sellSignal and showLabels ? shortStop : na, title="Sell Label", text="Sell", location=location.absolute, style=shape.labeldown, size=size.tiny, color=shortColor, textcolor=color.white, transp=0)

midPricePlot = plot(ohlc4, title="", style=plot.style_circles, linewidth=0, display=display.none, editable=false)

longFillColor = highlightState ? (dir == 1 ? longColor : na) : na
shortFillColor = highlightState ? (dir == -1 ? shortColor : na) : na
fill(midPricePlot, longStopPlot, title="Long State Filling", color=longFillColor)
fill(midPricePlot, shortStopPlot, title="Short State Filling", color=shortFillColor)

changeCond = dir != dir[1]

len = input(title="Length", type=input.integer, defval=50)
offset = input(title="Offset", type=input.integer, defval=0)
src = input(close, title="Source")
lsma = linreg(src, len, offset)
lsma2 = linreg(lsma, len, offset)
eq= lsma-lsma2
zlsma = lsma+eq

plot(zlsma, color=color.yellow, linewidth=3)


if time >= start and time <= end
    longCondition1 = buySignal and (close > zlsma + 10)
    longCondition2 = buySignal and (close < zlsma - 10)
    shortCondition1 = sellSignal and (close > zlsma + 10) 
    shortCondition2 = sellSignal and (close < zlsma - 10)
    //Exit conditions for long position
    longExitCondition1 = sellSignal or (close < zlsma) 
    longExitCondition2 = sellSignal or (close > zlsma) 
    //Exit conditions for short position
    shortExitCondition1 = buySignal or (close < zlsma) 
    shortExitCondition2 = buySignal or (close > zlsma)
    

    strategy.entry("Long", strategy.long, 1, when=longCondition1)
    strategy.exit("Exit Long", "Long", qty_percent=100, when=longExitCondition1)
    strategy.entry("Long", strategy.long, 1, when=longCondition2)
    strategy.exit("Exit Long", "Long", qty_percent=100, when=longExitCondition2)
        
    strategy.entry("Short", strategy.short, 1, when=shortCondition1)
    strategy.exit("Exit Short", "Short", qty_percent=100, when=shortExitCondition1)
    strategy.entry("Short", strategy.short, 1, when=shortCondition2)
    strategy.exit("Exit Short", "Short", qty_percent=100, when=shortExitCondition2)
